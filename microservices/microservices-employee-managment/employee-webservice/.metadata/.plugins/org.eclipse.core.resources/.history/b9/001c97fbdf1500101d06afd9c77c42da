package com.cetpa.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.cetpa.entity.Employee;
import com.cetpa.exception.DepartmentNotFoundException;
import com.cetpa.model.Department;
import com.cetpa.service.EmployeeService;

@RestController
@RequestMapping("employee")
public class EmployeeController 
{
	@Autowired private EmployeeService employeeService;
	@Autowired private RestTemplate restTemplate;
	
	@PostMapping("add")
	public ResponseEntity<Employee> addEmployee(@RequestBody Employee employee)
	{
		int did=employee.getDeptId();
		boolean isDepartmentExist=restTemplate.getForObject("http://localhost:8080/department/byid/"+did,Boolean.class);
		if(!isDepartmentExist)
		{
			throw new DepartmentNotFoundException("Department with id "+did+" does not exist");
		}
		employeeService.saveEmployee(employee);
		return ResponseEntity.status(HttpStatus.CREATED).body(employee);
	}
	@GetMapping("byid")
	public ResponseEntity<Employee> getEmployee(@RequestParam int eid)
	{
		Employee employee=employeeService.getRecord(eid);
		if(employee==null)
			return ResponseEntity.notFound().build();
		return ResponseEntity.ok(employee);
	}
	@GetMapping("department/byempid/{eid}")
	public ResponseEntity<Department> getDepartment(@PathVariable int eid)
	{
		Employee employee=employeeService.getRecord(eid);
		if(employee==null)
		{
			return ResponseEntity.notFound().build();
		}
		Department department=restTemplate.getForObject("http://localhost:8080/department/details/byid/"+employee.getDeptId(),Department.class);
		return ResponseEntity.ok(department);
	}
	@DeleteMapping("delete/byid/{eid}")
	public ResponseEntity<Employee> depeteEmployeeById(@PathVariable int eid)
	{
		Employee employee=employeeService.getRecord(eid);
		if(employee==null)
		{
			return ResponseEntity.notFound().build();
		}
		employeeService.deleteById(eid,employee.getDeptId());
		return ResponseEntity.ok(employee);
	}
	@PatchMapping("update/department/byid")
	public ResponseEntity<Employee> updateDepartmentById(@RequestParam int did,@RequestParam int eid)
	{
		Employee employee=employeeService.getRecord(eid);
		if(employee==null)
		{
			return ResponseEntity.notFound().build();
		}
		boolean isDepartmentExist=restTemplate.getForObject("http://localhost:8080/department/byid/"+did,Boolean.class);
		if(!isDepartmentExist)
		{
			throw new DepartmentNotFoundException("Department with id "+did+" does not exist");
		}
		employeeService.updateDepartmentById(did,employee);
		return ResponseEntity.ok(employee);
	}
}
